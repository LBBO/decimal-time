{"version":3,"sources":["./src/app/landingpage/landingpage.module.ts","./src/app/normal-time.service.ts","./src/app/landingpage/landingpage.component.ts","./src/app/landingpage/landingpage.component.html","./src/environments/environment.ts","./src/app/landingpage/landingpage-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/clock/clock.component.html","./src/app/clock/clock.component.ts","./src/app/app.module.ts","./src/app/clock/clock.module.ts","./src/app/landingpage/demo/demo.component.ts","./src/app/landingpage/demo/demo.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/v-time.service.ts","./src/app/landingpage/splashscreen/splashscreen.component.ts","./src/app/landingpage/splashscreen/splashscreen.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { LandingpageRoutingModule } from './landingpage-routing.module'\nimport { SplashscreenComponent } from './splashscreen/splashscreen.component'\nimport { DemoComponent } from './demo/demo.component'\nimport { ClockModule } from '../clock/clock.module'\nimport { LandingpageComponent } from './landingpage.component'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatTooltipModule } from '@angular/material/tooltip'\n\n@NgModule({\n  declarations: [LandingpageComponent, SplashscreenComponent, DemoComponent],\n  imports: [\n    CommonModule,\n    LandingpageRoutingModule,\n    ClockModule,\n    MatCardModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n})\nexport class LandingpageModule {}\n","import { Injectable, OnDestroy } from '@angular/core'\nimport { Observable, Subject } from 'rxjs'\nimport { distinctUntilChanged } from 'rxjs/operators'\nimport { ITimeService } from './ITimeService'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NormalTimeService implements OnDestroy, ITimeService {\n  #seconds$ = new Subject<number>()\n  #minutes$ = new Subject<number>()\n  #hours$ = new Subject<number>()\n  seconds$ = this.#seconds$.pipe(distinctUntilChanged())\n  minutes$ = this.#minutes$.pipe(distinctUntilChanged())\n  hours$ = this.#hours$.pipe(distinctUntilChanged())\n  readonly #interval?: ReturnType<typeof setInterval>\n\n  clockIntervals = new Array(12).fill(1).map((_, index) => index + 1)\n  readonly numOfLargeIntervals = 12\n  readonly numOfSmallIntervals = 5\n  readonly maxSmallHandValue = 12\n  readonly maxLargeHandValue = 60\n  readonly maxChronoValue = 60\n\n  constructor() {\n    this.#interval = setInterval(this.updateTime.bind(this), 100)\n  }\n\n  ngOnDestroy(): void {\n    if (this.#interval) {\n      clearInterval(this.#interval)\n    }\n  }\n\n  getTime(): Array<Observable<number>> {\n    return [this.hours$, this.minutes$, this.seconds$]\n  }\n\n  private updateTime(): void {\n    const now = new Date()\n    this.#seconds$.next(now.getSeconds())\n    this.#minutes$.next(now.getMinutes())\n    this.#hours$.next(now.getHours())\n  }\n}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-landingpage',\n  templateUrl: './landingpage.component.html',\n  styleUrls: ['./landingpage.component.scss'],\n})\nexport class LandingpageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-splashscreen></app-splashscreen>\n<app-demo></app-demo>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LandingpageComponent } from './landingpage.component'\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', component: LandingpageComponent },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LandingpageRoutingModule {}\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'decimal-time'\n}\n","<app-navigation></app-navigation>\n<router-outlet></router-outlet>\n","<!-- Clock from https://codepen.io/equinusocio/pen/PoNYGGX -->\n\n<div class=\"clock\" *ngIf=\"timeService\">\n  <div class=\"chrono\"></div>\n  <div class=\"hand\"></div>\n  <div class=\"hand small\"></div>\n</div>\n","import { Component, HostBinding, Input, OnInit } from '@angular/core'\nimport { ITimeService } from '../ITimeService'\n\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss'],\n})\nexport class ClockComponent implements OnInit {\n  @Input()\n  timeService?: ITimeService\n\n  @HostBinding('style.--large-intervals')\n  private numOfLargeIntervals = 0\n  @HostBinding('style.--small-intervals')\n  private numOfSmallIntervals = 0\n\n  @HostBinding('style.--progress-large-hand')\n  private progressLargeHand = 0\n  @HostBinding('style.--progress-small-hand')\n  private progressSmallHand = 0\n  @HostBinding('style.--progress-chrono')\n  private progressChrono = 0\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.timeService) {\n      this.numOfLargeIntervals = this.timeService.numOfLargeIntervals\n      this.numOfSmallIntervals = this.timeService.numOfSmallIntervals\n      const timeService = this.timeService\n\n      const [\n        smallHandValue$,\n        largeHandValue$,\n        chronoValue$,\n      ] = this.timeService.getTime()\n\n      largeHandValue$.subscribe((val) => {\n        this.progressLargeHand =\n          (val / timeService.maxLargeHandValue) % timeService.maxLargeHandValue\n      })\n      smallHandValue$.subscribe((val) => {\n        this.progressSmallHand =\n          (val / timeService.maxSmallHandValue) % timeService.maxSmallHandValue\n      })\n      chronoValue$.subscribe((val) => {\n        this.progressChrono =\n          (val / timeService.maxChronoValue) % timeService.maxChronoValue\n      })\n    }\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NavigationComponent } from './navigation/navigation.component'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { LandingpageRoutingModule } from './landingpage/landingpage-routing.module'\nimport { ClockModule } from './clock/clock.module'\nimport { LandingpageModule } from './landingpage/landingpage.module'\nimport { ScullyLibModule } from '@scullyio/ng-lib'\n\n@NgModule({\n  declarations: [AppComponent, NavigationComponent],\n  imports: [\n    BrowserModule,\n    LandingpageRoutingModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    ClockModule,\n    LandingpageModule,\n    ScullyLibModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ClockComponent } from './clock.component'\n\n@NgModule({\n  declarations: [ClockComponent],\n  imports: [CommonModule],\n  exports: [ClockComponent],\n})\nexport class ClockModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { NormalTimeService } from '../../normal-time.service'\nimport { VTimeService } from '../../v-time.service'\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.scss'],\n})\nexport class DemoComponent implements OnInit {\n  constructor(\n    public normalTimeService: NormalTimeService,\n    public vTimeService: VTimeService,\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<h3>What would a clock look like?</h3>\n<mat-card class=\"normal-time\">\n  <mat-card-header>\n    <mat-card-title>Normal time</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"card-content\">\n    <app-clock [timeService]=\"normalTimeService\"></app-clock>\n    <p>\n      This is how you are used to measuring time. There are 24 hours in a day,\n      60 minutes in an hour, and 60 seconds in a minute. You probably learned\n      this in pre-school.\n    </p>\n    <p>\n      These weird numbers make no real sense and are a frequent nuisance. For\n      example, try figuring out how many seconds are in three and a half hours.\n      Or try converting 72 km/h to m/s. Or figure out at what time 20% of the\n      day have passed. These calculations are unnecessarily confusing, aren't\n      they?\n    </p>\n  </mat-card-content>\n</mat-card>\n<mat-card class=\"decimal-time\">\n  <mat-card-header>\n    <mat-card-title>\n      Decimal time\n      <mat-icon\n        matTooltip=\"Decimal time units are emphasized; normal time units are not.\"\n      >\n        info_outlined\n      </mat-icon>\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"card-content\">\n    <app-clock [timeService]=\"vTimeService\"></app-clock>\n    <p>\n      As opposed to the standard time measuring system, this system divides\n      units into multiples of 10. The day is divided into 10 <em>hours</em>, one\n      <em>hour</em> is divided into 100 <em>minutes</em> and one\n      <em>minute</em> is divided into 100 <em>seconds</em>.\n    </p>\n    <p>\n      Since we represent numbers in the decimal system, decimal time allows us\n      to convert between units by simply moving the decimal point:\n    </p>\n    <ul>\n      <li>\n        3.5 <em>hours</em> to <em>seconds</em>? Multiply by 100*100 (or move the\n        decimal point four digits to the right): 3500 <em>seconds</em>.\n      </li>\n      <li>\n        72 km/<em>h</em> to m/<em>s</em>? 1000 meters in a kilometer, 100\n        <em>seconds</em> in an <em>hour</em>, so we multiply by 1000/100=10 (or\n        move the decimal point 3-2=1 digit to the right): 720 m/<em>s</em>.\n      </li>\n      <li>\n        20% of the day? There are 10 <em>hours</em> in a day, so that would be\n        exactly 2:00 o'clock. This also means an added bonus of easily\n        converting something like 0.1415 days into <em>hours</em>: you just have\n        to add the correct colons after one, three, and five digits (and add\n        zeroes, if necessary)! So, 0.1415 days would be 1 <em>hour</em>, 41\n        <em>minutes</em> and 50\n        <em>seconds</em>\n      </li>\n    </ul>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-toolbar color=\"primary\" class=\"nav-bar\">\n  <span>Decimal time</span>\n  <div class=\"spacer\"></div>\n  <a>Lorem</a>\n  <a>ipsum</a>\n</mat-toolbar>\n","import { Injectable, OnDestroy } from '@angular/core'\nimport { ITimeService } from './ITimeService'\nimport { Observable, Subject } from 'rxjs'\nimport { distinctUntilChanged } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VTimeService implements ITimeService, OnDestroy {\n  readonly clockIntervals = new Array(100).fill(1).map((_, index) => index)\n  readonly numOfLargeIntervals = 10\n  readonly numOfSmallIntervals = 10\n  readonly maxSmallHandValue = 10\n  readonly maxLargeHandValue = 100\n  readonly maxChronoValue = 100\n\n  #milliV$ = new Subject<number>()\n  #deciV$ = new Subject<number>()\n  #v$ = new Subject<number>()\n  milliV$ = this.#milliV$.pipe(distinctUntilChanged())\n  deciV$ = this.#deciV$.pipe(distinctUntilChanged())\n  v$ = this.#v$.pipe(distinctUntilChanged())\n\n  readonly #interval?: ReturnType<typeof setInterval>\n\n  constructor() {\n    this.#interval = setInterval(this.updateTime.bind(this), 100)\n  }\n\n  ngOnDestroy(): void {\n    if (this.#interval) {\n      clearInterval(this.#interval)\n    }\n  }\n\n  getTime(): Array<Observable<number>> {\n    return [this.v$, this.deciV$, this.milliV$]\n  }\n\n  private updateTime(): void {\n    const millisecondsPerDay = 24 * 60 * 60 * 1000\n    const millisecondsPerV = millisecondsPerDay / 10\n    const millisecondsPerDeciV = millisecondsPerV / 100\n    const millisecondsPerMilliV = millisecondsPerV / 10_000\n    const now = new Date()\n    const totalMinutesPassed = now.getHours() * 60 + now.getMinutes()\n    const totalSecondsPassed = totalMinutesPassed * 60 + now.getSeconds()\n    const totalMillisecondsPassed =\n      totalSecondsPassed * 1000 + now.getMilliseconds()\n    this.#milliV$.next(\n      Math.floor(totalMillisecondsPassed / millisecondsPerMilliV) % 100,\n    )\n    this.#deciV$.next(\n      Math.floor(totalMillisecondsPassed / millisecondsPerDeciV) % 100,\n    )\n    this.#v$.next(Math.floor(totalMillisecondsPassed / millisecondsPerV) % 10)\n  }\n}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-splashscreen',\n  templateUrl: './splashscreen.component.html',\n  styleUrls: ['./splashscreen.component.scss'],\n})\nexport class SplashscreenComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1>It's time to fix time!</h1>\n<p>\n  Why are all units based on multiples of ten <em>except time</em>?\n  <br />\n  Let's change that.\n</p>\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nconst routes: Routes = []\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}